{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "para_acronym_region": {
      "type": "string",
      "allowedValues": [
        "ne",
        "we"
      ],
      "defaultValue": "ne"
    },
    "para_acronym_resgrp": {
      "type": "string",
      "defaultValue": "rg"
    },
    "para_acronym_appsvc": {
      "type": "string",
      "defaultValue": "appsvc"
    },
    "para_acronym_svcpln": {
      "type": "string",
      "defaultValue": "svcpln"
    },
    "para_acronym_stract": {
      "type": "string",
      "defaultValue": "str"
    },
    "para_acronym_kv": {
      "type": "string",
      "defaultValue": "kv"
    },
    "para_acronym_azfunc": {
      "type": "string",
      "defaultValue": "fn"
    },
    "para_acronym_appin": {
      "type": "string",
      "defaultValue": "appins"
    },
    "para_acronym_webapp": {
      "type": "string",
      "defaultValue": "webapp"
    },
    "para_acronym_docdb": {
      "type": "string",
      "defaultValue": "docdb"
    },

    "para_application_id": {
      "type": "string"
    },
    "para_application_name": {
      "type": "string"
    },
    "para_vanity_name": {
      "type": "string"
    },
    "para_target_env": {
      "type": "string"
    },
    "para_kvSecretsObject": {
      "type": "object",
      "defaultValue": "{}"
    },
    "para_storageObject": {
      "type": "object",
      "defaultValue": "{}"
    },
    "para_databaseAccountTier": { "type": "string" },
    "para_svcPlanSku": {
      "type": "string",
      "allowedValues": [
        "Free",
        "Shared",
        "Basic",
        "Standard",
        "Premium"
      ],
      "defaultValue": "Free",
      "metadata": {
        "description": "The pricing tier of the App Service plan."
      }
    },
    "para_svcPlanSize": {
      "type": "string",
      "defaultValue": "F1",
      "metadata": {
        "description": "The instance size of the App Service Plan."
      }
    },
    "para_svcPlanFamily": {
      "type": "string",
      "defaultValue": "F"
    },
    "para_svcPlanCapacity": {
      "type": "string",
      "defaultValue": "1"
    },
    "para_vnet_name": {
      "type": "string"
    },
    "para_vnet_resourcegroup": {
      "type": "string"
    },
    "para_vnet_thumbprint": {
      "type": "string"
    },
    "para_vnet_certblob": {
      "type": "securestring"
    },
    "para_web_certblob": {
      "type": "securestring"
    },
    "para_web_certpass": {
      "type": "securestring"
    },
    "para_web_thumbprint": {
      "type": "securestring"
    }
  },
  "variables": {
    "var_sub_id": "[subscription().subscriptionId]",
    "var_ten_id": "[subscription().tenantId]",

    "var_env_region": "[concat(parameters('para_target_env'), '-', parameters('para_acronym_region'))]",
    "var_public_url": "[concat(parameters('para_target_env'), '.', parameters('para_application_name'), '.', parameters('para_vanity_name'))]",
    "var_str_name": "[concat( tolower(parameters('para_application_name')), parameters('para_acronym_stract'), parameters('para_target_env'), parameters('para_acronym_region'))]",
    "var_str_resId": "[resourceId(resourceGroup().Name,'Microsoft.Storage/storageAccounts', variables('var_str_name'))]",
    "var_kv_name": "[concat(parameters('para_application_name'), '-', parameters('para_acronym_kv'), '-', variables('var_env_region'))]",
    "var_azf_name": "[concat(parameters('para_application_name'), '-', parameters('para_acronym_azfunc'),'-', variables('var_env_region'))]",
    "var_appin_name": "[concat(parameters('para_application_name'), '-',parameters('para_acronym_appin'),'-', variables('var_env_region'))]",
    "var_hstpln_group": "[concat(parameters('para_application_name'), '-', parameters('para_acronym_resgrp'), '-', variables('var_env_region'))]",
    "var_hstpln_env": "[concat(parameters('para_application_name'), '-', parameters('para_acronym_appsvc'), '-', variables('var_env_region'))]",
    "var_hstpln_name": "[concat(parameters('para_application_name'), '-', parameters('para_acronym_svcpln'), '-', variables('var_env_region'))]",
    "var_webapp_name": "[concat(parameters('para_application_name'), '-',parameters('para_acronym_webapp'),'-', variables('var_env_region'))]",
    "var_webapp_hstpln": "[concat('/subscriptions/', variables('var_sub_id'), '/resourceGroups/', variables('var_hstpln_group'), '/providers/Microsoft.Web/serverfarms/', variables('var_hstpln_name'))]",
    "var_docdb_name": "[concat(parameters('para_application_name'), '-',parameters('para_acronym_docdb'),'-', variables('var_env_region'))]",
    "var_cert_name": "[concat( tolower(parameters('para_application_name')), uniqueString(resourceGroup().id))]",

    "var_svc_prin": "[concat(resourceId('Microsoft.Web/sites', variables('var_webapp_name')),'/providers/Microsoft.ManagedIdentity/Identities/default')]",
    "var_vnet_resourceid": "[concat('/subscriptions/',variables('var_sub_id'),'/resourceGroups/', parameters('para_vnet_resourcegroup'), '/providers/Microsoft.Network/virtualNetworks/', parameters('para_vnet_name') )]"
  },
  "resources": [
    {
      "apiVersion": "2015-04-08",
      "dependsOn": [],
      "location": "[resourceGroup().location]",
      "name": "[variables('var_docdb_name')]",
      "properties": {
        "name": "[variables('var_docdb_name')]",
        "databaseAccountOfferType": "[parameters('para_databaseAccountTier')]",
        "locations": [
          {
            "locationName": "[resourceGroup().location]",
            "failoverPriority": 0
          }
        ]
      },
      "tags": {
        "displayName": "CosmosDB"
      },
      "type": "Microsoft.DocumentDB/databaseAccounts"
    },
    {
      "apiVersion": "2015-05-01",
      "kind": "app",
      "location": "[resourceGroup().location]",
      "name": "[variables('var_appin_name')]",
      "properties": {
        "Application_Type": "web",
        "ApplicationId": "[variables('var_appin_name')]"
      },
      "tags": {
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('var_webapp_name'))]": "Resource",
        "displayName": "AppInsightsComponent"
      },
      "type": "Microsoft.Insights/components"
    },
    {
      "apiVersion": "2016-10-01",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('var_webapp_name'))]"
      ],
      "location": "[resourceGroup().location]",
      "name": "[variables('var_kv_name')]",
      "properties": {
        "accessPolicies": [
          {
            "objectId": "[reference(variables('var_svc_prin'), '2015-08-31-PREVIEW').principalId]",
            "permissions": {
              "certificates": [
                "get",
                "list",
                "update",
                "create",
                "import",
                "delete",
                "recover",
                "managecontacts",
                "manageissuers",
                "getissuers",
                "listissuers",
                "setissuers",
                "deleteissuers"
              ],
              "keys": [
                "get",
                "list",
                "update",
                "create",
                "import",
                "delete",
                "recover",
                "backup",
                "restore",
                "decrypt",
                "encrypt",
                "unwrapKey",
                "wrapKey",
                "verify",
                "sign",
                "purge"
              ],
              "secrets": [
                "get",
                "list",
                "set",
                "delete",
                "recover",
                "backup",
                "restore",
                "purge"
              ]
            },
            "tenantId": "[variables('var_ten_id')]"
          }
        ],
        "enabledForDeployment": false,
        "enabledForDiskEncryption": false,
        "enabledForTemplateDeployment": true,
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "tenantId": "[variables('var_ten_id')]"
      },
      "scale": null,
      "tags": {
        "displayName": "Key Vault"
      },
      "type": "Microsoft.KeyVault/vaults"
    },
    {
      "apiVersion": "2018-07-01",
      "dependsOn": [],
      "kind": "StorageV2",
      "location": "[resourceGroup().location]",
      "name": "[variables('var_str_name')]",
      "properties": {
        "accessTier": "Hot",
        "encryption": {
          "services": {
            "file": {
              "enabled": true
            },
            "blob": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": false
      },
      "resources": [],
      "scale": null,
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "tags": {
        "displayName": "StorageAcct"
      },
      "type": "Microsoft.Storage/storageAccounts"
    },
    {
      "apiVersion": "2018-03-01-preview",
      "copy": {
        "name": "containersCopy",
        "count": "[length(parameters('para_storageObject').containers)]"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('var_str_name'))]"
      ],
      "name": "[concat(variables('var_str_name'), '/default/', parameters('para_storageObject').containers[copyIndex()].containerName)]",
      "properties": {
        "publicAccess": "Container"
      },
      "tags": {
        "displayName": "StorageAcct/Containers"
      },
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers"
    },
    {
      "apiVersion": "2015-08-01",
      "dependsOn": [],
      "location": "[resourceGroup().location]",
      "name": "[variables('var_cert_name')]",
      "properties": {
        "pfxBlob": "[parameters('para_web_certblob')]",
        "password": "[parameters('para_web_certpass')]"
      },
      "scale": null,
      "tags": {
        "displayName": "WebApp Certificate"
      },
      "type": "Microsoft.Web/certificates"
    },
    {
      "apiVersion": "2016-09-01",
      "dependsOn": [],
      "kind": "app",
      "location": "[resourceGroup().location]",
      "name": "[variables('var_hstpln_name')]",
      "properties": {
        "adminSiteName": "",
        "name": "[variables('var_hstpln_name')]",
        "perSiteScaling": false,
        "reserved": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0,
        "workerTierName": ""
      },
      "scale": null,
      "sku": {
        "name": "[parameters('para_svcPlanSize')]",
        "tier": "[parameters('para_svcPlanSku')]",
        "size": "[parameters('para_svcPlanSize')]",
        "family": "[parameters('para_svcPlanFamily')]",
        "capacity": "[parameters('para_svcPlanCapacity')]"
      },
      "tags": {
        "displayName": "Service Plan/ Farm"
      },
      "type": "Microsoft.Web/serverfarms"
    },
    {
      "apiVersion": "2015-06-01",
      "copy": {
        "name": "secretsCopy",
        "count": "[length(parameters('para_kvSecretsObject').secrets)]"
      },
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', variables('var_kv_name'))]"
      ],
      "location": "[resourceGroup().location]",
      "name": "[concat(variables('var_kv_name'), '/', parameters('para_kvSecretsObject').secrets[copyIndex()].secretName)]",
      "properties": {
        "contentType": "[parameters('para_kvSecretsObject').secrets[copyIndex()].contentType]",
        "value": "[parameters('para_kvSecretsObject').secrets[copyIndex()].secretValue]"
      },
      "tags": {
        "displayName": "Key Vault Secrets"
      },
      "type": "Microsoft.KeyVault/vaults/secrets"
    },
    {
      "apiVersion": "2015-08-01",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms/', variables('var_hstpln_name'))]",
        "[resourceId('Microsoft.web/certificates', variables('var_cert_name'))]",
        "[resourceId('Microsoft.DocumentDb/databaseAccounts/',variables('var_docdb_name'))]"
      ],
      "identity": {
        "type": "SystemAssigned"
      },
      "kind": "app",
      "location": "[resourceGroup().location]",
      "name": "[variables('var_webapp_name')]",
      "properties": {
        "domainId": null,
        "hostingEnvironment": "[variables('var_hstpln_env')]",
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "wopihost.hub.knightfrank.com",
            "sslState": "SniEnabled",
            "thumbprint": "[parameters('para_web_thumbprint')]",
            "hostType": "Standard"
          },
          {
            "name": "[concat(variables('var_webapp_name'), '.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Standard"
          },
          {
            "name": "[concat(variables('var_webapp_name'), '.scm.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Repository"
          }
        ],
        "httpsOnly": true,
        "name": "[variables('var_webapp_name')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('var_hstpln_name'))]",
        "siteConfig": {
          "vnetName": "[parameters('para_vnet_name')]",
          "siteAuthSettings": {
            "clientId": "[parameters('para_application_id')]",
            "enabled": true,
            "unauthenticatedClientAction": "RedirectToLoginPage",
            "tokenStoreEnabled": true,
            "defaultProvider": "AzureActiveDirectory",
            "issuer": "[concat('https://sts.windows.net/', variables('var_ten_id'))]",
            "allowedAudiences": [
              "[concat('https://', variables('var_webapp_name'), '.azurewebsites.net')]",
              "[concat('https://', parameters('para_vanity_name'),'')]"
            ]
          },
          "alwaysOn": false
        },
        "siteName": "[variables('var_webapp_name')]"
      },
      "resources": [
        {
          "apiVersion": "2015-08-01",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('var_webapp_name'))]",
            "[resourceId('Microsoft.KeyVault/vaults/', variables('var_kv_name'))]",
            "secretsCopy"
          ],
          "name": "appsettings",
          "properties": {
            "CertPfxBase64": "[concat('@Microsoft.KeyVault(SecretUri=', reference('WebCertPfxBase64').secretUriWithVersion, ')')]",
            "CertPfxPassword": "[concat('@Microsoft.KeyVault(SecretUri=', reference('WebCertPfxPassword').secretUriWithVersion, ')')]",
            "WEBSITE_LOAD_CERTIFICATES": "[concat('@Microsoft.KeyVault(SecretUri=', reference('WebCertThumbprint').secretUriWithVersion, ')')]",
            "ddb:database": "[concat('@Microsoft.KeyVault(SecretUri=', reference('Database').secretUriWithVersion, ')')]",
            "abs:Protocol": "[concat('@Microsoft.KeyVault(SecretUri=', reference('Protocol').secretUriWithVersion, ')')]",
            "WopiDiscovery": "[concat('@Microsoft.KeyVault(SecretUri=', reference('WopiDiscovery').secretUriWithVersion, ')')]",
            "ida:AADInstance": "[concat('@Microsoft.KeyVault(SecretUri=', reference('AADInstance').secretUriWithVersion, ')')]",
            "ida:ClientSecret": "[concat('@Microsoft.KeyVault(SecretUri=', reference('ClientSecret').secretUriWithVersion, ')')]",
            "AuthorizationUri": "[concat('@Microsoft.KeyVault(SecretUri=', reference('AuthorizationUri').secretUriWithVersion, ')')]",
            "AADGraphResourceId": "[concat('@Microsoft.KeyVault(SecretUri=', reference('AADGraphResourceId').secretUriWithVersion, ')')]",
            "MicrosoftGraphResourceId": "[concat('@Microsoft.KeyVault(SecretUri=', reference('MicrosoftGraphResourceId').secretUriWithVersion, ')')]",
            "Audience": "[concat('@Microsoft.KeyVault(SecretUri=', reference('Audience').secretUriWithVersion, ')')]",

            //"CertPfxBase64": "[parameters('para_web_certblob')]",
            //"CertPfxPassword": "[parameters('para_web_certpass')]",
            //"WEBSITE_LOAD_CERTIFICATES": "[parameters('para_web_thumbprint')]",
            //"ddb:database": "WopiDb",
            //"abs:Protocol": "https",
            ////"WopiDiscovery": "https://wopi.hub.knightfrank.com/hosting/discovery",
            //"ida:AADInstance": "https://login.microsoftonline.com/",
            //"ida:ClientSecret": "(rk%/:C(/&$]=O]%eq.0@l-_9/",
            //"AuthorizationUri": "https://login.microsoftonline.com",
            //"AADGraphResourceId": "https://graph.windows.net",
            //"MicrosoftGraphResourceId": "https://graph.microsoft.com",
            //"Audience": "https://wopi.hub.knightfrank.com",

            "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(concat('microsoft.insights/components/', variables('var_appin_name'))).InstrumentationKey]",
            "ddb:endpoint": "[reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('var_docdb_name'))).documentEndpoint]",
            "ddb:authKey": "[listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('var_docdb_name')), '2015-04-08').primaryMasterKey]",
            "ida:PostLogoutRedirectUri": "[parameters('para_vanity_name')]",
            "ida:ClientId": "[parameters('para_application_id')]",
            "abs:AccountName": "[variables('var_str_name')]",
            "abs:AccountKey": "[listKeys( resourceId('Microsoft.Storage/storageAccounts', variables('var_str_name')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]"
          },
          "tags": {
            "displayName": "AppSettings"
          },
          "type": "config"
        }
      ],
      "tags": {
        "displayName": "WebApp"
      },
      "type": "Microsoft.Web/sites"
    },
    {
      "apiVersion": "2016-08-01",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('var_webapp_name'))]"
      ],
      "location": "[resourceGroup().location]",
      "name": "[concat(variables('var_webapp_name'), '/wopihost.hub.knightfrank.com')]",
      "properties": {
        "siteName": "wopihost-webapp-dev-ne",
        "hostNameType": "Verified",
        "sslState": "SniEnabled",
        "thumbprint": "[parameters('para_web_thumbprint')]"
      },
      "tags": {
        "displayName": "WebApp HostNameBindings"
      },
      "type": "Microsoft.Web/sites/hostNameBindings"
    },
    {
      "apiVersion": "2016-08-01",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('var_webapp_name'))]"
      ],
      "location": "[resourceGroup().location]",
      "name": "[concat(variables('var_webapp_name'), '/', parameters('para_vnet_name'))]",
      "properties": {
        "vnetResourceId": "[variables('var_vnet_resourceid')]",
        "certThumbprint": "[parameters('para_vnet_thumbprint')]",
        "certBlob": "[parameters('para_vnet_certblob')]",
        "routes": null,
        "resyncRequired": false,
        "dnsServers": null,
        "isSwift": false
      },
      "tags": {
        "displayName": "WebApp Vnet"
      },
      "type": "Microsoft.Web/sites/virtualNetworkConnections"
    }
  ]
}